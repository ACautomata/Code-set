#include<bits/stdc++.h>
using namespace std;
const int maxn = 1010100;
int n;
int x,y;
int tot;
int lt[1110000],fl,i;
int z[10101000],size[10100101],now[1100101],son[10101010],pre[1000101];
int dfs(int u,int fa)
{
z[u]=1;
size[u]=1;
int j=now[u];
int flag=1;
while (j!=0)
{
if (son[j]==fa)
{
j=pre[j];
continue;
}
dfs(son[j],u);
size[u]+=size[son[j]];
if (size[son[j]]>n/2)
{
flag=0;
}
j=pre[j];
}
if (n-size[u]>n/2)
{
flag=0;
}
if (flag)
{
lt[u]=1;
}
return size[u];
}
int main()
{
scanf("%d",&n);
for (i=1;i<=n-1;i++)
{
scanf("%d%d",&x,&y);
tot++;
pre[tot]=now[x];
now[x]=tot;
son[tot]=y;
tot++;
pre[tot]=now[y];
now[y]=tot;
son[tot]=x;
}
dfs(1,0);
for (i=1;i<=n;i++)
{
if (lt[i]==1)
{
printf("%d\n",i);
fl=1;
}
}
if (!fl)
{
printf("NONE\n");
}
return 0;
}